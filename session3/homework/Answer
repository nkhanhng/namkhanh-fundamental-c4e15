1) for loops:
 - iterates through a collection or iterable object or generator function
 - less code lines

 while loops:
 - loops until a condition is False

2) break:
- terminates the current loop and resumes execution at the next statement

continue:
- returns the control to the beginning of the while loop
-ejects all the remaining statements in the current iteration of the loop
and moves the control back to the top of the loop.

3)- The else statement is executed when the loop has exhausted iterating the list
-If the else statement is used with a while loop, the else statement is executed
when the condition becomes false

4) Counter loops can be coded with a while statement that keeps track of the index
manually, or with a for loop that uses the range built-in function to generate successive
integer offsets. Neither is the preferred way to work in Python, if you need
to simply step across all the items in a sequence. Instead, use a simple for loop
instead, without range or counters, whenever possible; it will be easier to code and
usually quicker to run.


5)- A range can deliver a sequence of values to the loop variable in the for loop
For i in range(x , y , z)
               ^   ^   ^
            start stop step
